/*
 * File: app/view/Viewport.js
 *
 * This file was generated by Sencha Architect version 3.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Tel100.view.Viewport', {
  extend: 'Ext.container.Viewport',
  alias: 'widget.viewport',

  requires: [
    'Tel100.view.ViewportViewModel',
    'Tel100.view.ViewportViewController',
    'Ext.form.Panel',
    'Ext.form.field.Text',
    'Ext.button.Button'
  ],

  controller: 'viewport',
  viewModel: {
    type: 'viewport'
  },

  layout: {
    type: 'vbox',
    align: 'center',
    pack: 'center'
  },
  items: [
    {
      xtype: 'form',
      frame: true,
      height: '',
      width: 400,
      bodyPadding: 10,
      title: 'Login',
      items: [
        {
          xtype: 'textfield',
          anchor: '100%',
          itemId: 'username',
          fieldLabel: 'Username',
          allowBlank: false,
          bind: {
            value: '{username}'
          }
        },
        {
          xtype: 'textfield',
          anchor: '100%',
          itemId: 'password',
          fieldLabel: 'Password',
          inputType: 'password',
          allowBlank: false,
          bind: {
            value: '{password}'
          }
        },
        {
          xtype: 'container',
          layout: {
            type: 'hbox',
            align: 'middle',
            pack: 'end'
          },
          items: [
            {
              xtype: 'button',
              formBind: true,
              padding: 5,
              text: 'Login &rarr;',
              listeners: {
                click: 'onLogin'
              }
            }
          ]
        }
      ]
    }
  ],
  listeners: {
    afterrender: 'onAfterRender'
  }

});