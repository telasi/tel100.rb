/*
 * File: app/view/party/Favourites.js
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Tel100.view.party.Favourites', {
  extend: 'Ext.grid.Panel',
  alias: 'widget.partyfavourites',

  requires: [
    'Tel100.view.party.FavouritesViewModel',
    'Ext.grid.column.Column',
    'Ext.grid.View'
  ],

  viewModel: {
    type: 'partyfavourites'
  },
  defaultListenerScope: true,

  bind: {
    title: '{i18n.hr.favourites.title}',
    store: '{favourites}'
  },
  columns: [
    {
      xtype: 'gridcolumn',
      renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
        return helpers.party.favouriteDecoration(value, record);
      },
      draggable: false,
      resizable: false,
      dataIndex: 'name',
      hideable: false,
      flex: 1,
      bind: {
        text: '{i18n.hr.party.fields.name}'
      }
    }
  ],
  listeners: {
    afterrender: 'onGridpanelAfterRender'
  },

  onGridpanelAfterRender: function(component, eOpts) {
    component.addDocked(new Ext.PagingToolbar({
          displayInfo: true,
          dock: 'bottom',
          afterPageText: ' / {0}',
          beforePageText: i18n.ui.page,
          emptyMsg: i18n.ui.emptyMsg,
          displayMsg : i18n.ui.displayMsg,
          bind: {
            store: '{favourites}'
          }
        }));
  }

});