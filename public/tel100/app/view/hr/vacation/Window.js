/*
 * File: app/view/hr/vacation/Window.js
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Tel100.view.hr.vacation.Window', {
  extend: 'Ext.window.Window',
  alias: 'widget.hrvacationwindow',

  requires: [
    'Tel100.view.hr.vacation.WindowViewModel',
    'Tel100.view.hr.vacation.WindowViewController',
    'Ext.form.Panel',
    'Ext.form.field.ComboBox',
    'Ext.form.FieldContainer',
    'Ext.form.field.Date',
    'Ext.form.Label',
    'Ext.form.field.Hidden',
    'Ext.button.Button',
    'Ext.form.field.TextArea'
  ],

  controller: 'hrvacationwindow',
  viewModel: {
    type: 'hrvacationwindow'
  },
  height: 550,
  resizable: true,
  width: 700,
  autoDestroy: false,
  modal: true,

  bind: {
    title: '{i18n.vacation.ui.button}'
  },
  items: [
    {
      xtype: 'form',
      defaults: {
        labelWidth: 200
      },
      bodyPadding: 10,
      header: false,
      title: 'My Form',
      jsonSubmit: true,
      url: '/api/vacation/create',
      items: [
        {
          xtype: 'combobox',
          anchor: '100%',
          name: 'vacation_type',
          allowBlank: false,
          editable: false,
          displayField: 'name',
          valueField: 'id',
          bind: {
            fieldLabel: '{i18n.vacation.fields.type}',
            store: '{types}'
          }
        },
        {
          xtype: 'fieldcontainer',
          height: 26,
          layout: {
            type: 'hbox',
            align: 'stretch'
          },
          bind: {
            fieldLabel: '{i18n.vacation.fields.period}'
          },
          items: [
            {
              xtype: 'datefield',
              flex: 1,
              margin: '0 10 0 0',
              name: 'from_date',
              allowBlank: false,
              format: 'd/m/Y'
            },
            {
              xtype: 'datefield',
              flex: 1,
              name: 'to_date',
              allowBlank: false,
              format: 'd/m/Y'
            }
          ]
        },
        {
          xtype: 'fieldcontainer',
          height: 26,
          layout: {
            type: 'hbox',
            align: 'stretch'
          },
          bind: {
            fieldLabel: '{i18n.vacation.fields.onbehalf}'
          },
          items: [
            {
              xtype: 'textfield',
              flex: 1,
              id: 'onbehalf_name',
              name: 'onbehalf_name',
              editable: false
            },
            {
              xtype: 'hiddenfield',
              flex: 1,
              fieldLabel: 'onbehalf',
              name: 'onbehalf'
            },
            {
              xtype: 'button',
              itemId: 'requester',
              text: '...',
              listeners: {
                click: { 
                  fn: 'onSelectClick',
                  extraArgs: 'onbehalf'
                }
              }
            }
          ]
        },
        {
          xtype: 'fieldcontainer',
          height: 26,
          layout: {
            type: 'hbox',
            align: 'stretch'
          },
          bind: {
            fieldLabel: '{i18n.vacation.fields.substitude}'
          },
          items: [
            {
              xtype: 'textfield',
              flex: 1,
              id: 'substitude_name',
              name: 'substitude_name',
              editable: false
            },
            {
              xtype: 'textfield',
              // flex: 1,
              width: 100,
              // fieldLabel: 'substitude',
              name: 'substitude',
              editable: false,
              bind: {
                value: '{substitude}'
              }
            },
            {
              xtype: 'button',
              itemId: 'substitude',
              text: '...',
              listeners: {
                click: { 
                  fn: 'onSelectSubstitude',
                  extraArgs: 'substitude'
                }
              }
            },
            {
              xtype: 'button',
              text: 'X',
              listeners: {
                click: {
                  fn: 'onClearClick',
                  extraArgs: 'substitude'
                }
              }
            }
          ]
        },
        {
          xtype: 'radiogroup',
          // columns: 3,
          layout: {
            type: 'hbox',
            // align: 'stretch',
          },
          bind: {
            hidden: '{!substitude}'
          },
          items: [
            {
              xtype: 'radiofield',
              reference: 'own_salary',
              name: 'salary',
              checked: true,
              inputValue: 'own'
            }, {
              xtype: 'splitter'
            }, {
              xtype: 'container',
              layout: 'hbox',
              items: [
                {
                  xtype: 'radiofield',
                  reference: 'sub_salary',
                  name: 'salary',
                  inputValue: 'sub'
                }, {
                  xtype: 'splitter'
                }, {
                  xtype: 'combobox',
                  bind: {
                    store: '{salary_type}'
                  },
                  width: 100,
                  editable: false,
                  displayField: 'name',
                  valueField: 'id',
                  name: 'percent',
                  inputValue: 'percent',
                  listeners: {
                    afterrender: function() {
                       this.setValue(0);
                    }
                }
                }
              ]
            }
          ]
        },
        {
          xtype: 'combobox',
          anchor: '100%',
          name: 'substitude_type',
          hidden: true,
          readOnly: false,
          editable: false,
          displayField: 'name',
          valueField: 'id',
          bind: {
            fieldLabel: '{i18n.vacation.fields.docview}',
            store: '{substitude_type}',
            selection: '{substitude_explain}'
          }
        },
        {
          xtype: 'textareafield',
          height: 100,
          hidden: true,
          width: '100%',
          name: 'substitude_type_explanation',
          submitValue: false,
          editable: false,
          bind: {
            value: '{substitude_explain.explain}'
          }
        },
        {
          xtype: 'label',
          padding: '10 0 0 0',
          style: {
            fontWeight: 'bold'
          },
          bind: {
            text: '{i18n.vacation.fields.signees}'
          }
        },{
          xtype: 'box',
          margin: 0,
          autoEl : {
              tag : 'hr'
          }
        },{
          xtype: 'panel',
          padding: '0 0 10 0',
          header: false,
          bind: {
            title: '{i18n.vacation.fields.signees}'
          }
        },
        {
          xtype: 'fieldcontainer',
          anchor: '100%',
          layout: {
            type: 'hbox',
            align: 'stretch'
          },
          bind: {
            fieldLabel: '{i18n.vacation.fields.head_of_direction}'
          },
          items: [
            {
              xtype: 'textfield',
              flex: 1,
              name: 'head_of_direction_name',
              editable: false
            },
            {
              xtype: 'hiddenfield',
              flex: 1,
              fieldLabel: 'Label',
              name: 'head_of_direction'
            },
            {
              xtype: 'button',
              itemId: 'head_of_direction',
              text: '...',
              listeners: {
                click: { 
                  fn: 'onSelectClick',
                  extraArgs: 'head_of_direction'
                }
              }
            },
            {
              xtype: 'button',
              text: 'X',
              listeners: {
                click: {
                  fn: 'onClearClick',
                  extraArgs: 'head_of_direction'
                }
              }
            }
          ]
        },
        {
          xtype: 'fieldcontainer',
          anchor: '100%',
          layout: {
            type: 'hbox',
            align: 'stretch'
          },
          bind: {
            fieldLabel: '{i18n.vacation.fields.head_of_group}'
          },
          items: [
            {
              xtype: 'textfield',
              flex: 1,
              name: 'head_of_group_name',
              editable: false
            },
            {
              xtype: 'hiddenfield',
              flex: 1,
              fieldLabel: 'Label',
              name: 'head_of_group'
            },
            {
              xtype: 'button',
              itemId: 'head_of_group',
              text: '...',
              listeners: {
                click: { 
                  fn: 'onSelectClick',
                  extraArgs: 'head_of_group'
                }
              }
            },
            {
              xtype: 'button',
              text: 'X',
              listeners: {
                click: {
                  fn: 'onClearClick',
                  extraArgs: 'head_of_group'
                }
              }
            }
          ]
        },
        {
          xtype: 'fieldcontainer',
          anchor: '100%',
          layout: {
            type: 'hbox',
            align: 'stretch'
          },
          bind: {
            fieldLabel: '{i18n.vacation.fields.head_of_division}'
          },
          items: [
            {
              xtype: 'textfield',
              flex: 1,
              name: 'head_of_division_name',
              editable: false
            },
            {
              xtype: 'hiddenfield',
              flex: 1,
              fieldLabel: 'Label',
              name: 'head_of_division'
            },
            {
              xtype: 'button',
              itemId: 'head_of_division',
              text: '...',
              listeners: {
                click: { 
                  fn: 'onSelectClick',
                  extraArgs: 'head_of_division'
                }
              }
            },
            {
              xtype: 'button',
              text: 'X',
              listeners: {
                click: {
                  fn: 'onClearClick',
                  extraArgs: 'head_of_division'
                }
              }
            }
          ]
        },
        {
          xtype: 'fieldcontainer',
          anchor: '100%',
          layout: {
            type: 'hbox',
            align: 'stretch'
          },
          bind: {
            fieldLabel: '{i18n.vacation.fields.head_of_department}'
          },
          items: [
            {
              xtype: 'textfield',
              flex: 1,
              name: 'head_of_department_name',
              editable: false
            },
            {
              xtype: 'hiddenfield',
              flex: 1,
              fieldLabel: 'Label',
              name: 'head_of_department'
            },
            {
              xtype: 'button',
              itemId: 'head_of_department',
              text: '...',
              listeners: {
                click: { 
                  fn: 'onSelectClick',
                  extraArgs: 'head_of_department'
                }
              }
            },
            {
              xtype: 'button',
              text: 'X',
              listeners: {
                click: {
                  fn: 'onClearClick',
                  extraArgs: 'head_of_department'
                }
              }
            }
          ]
        },
        {
          xtype: 'fieldcontainer',
          anchor: '100%',
          layout: {
            type: 'hbox',
            align: 'stretch'
          },
          bind: {
            fieldLabel: '{i18n.vacation.fields.director}'
          },
          items: [
            {
              xtype: 'textfield',
              flex: 1,
              name: 'director_name',
              editable: false
            },
            {
              xtype: 'hiddenfield',
              flex: 1,
              fieldLabel: 'Label',
              name: 'director'
            },
            {
              xtype: 'button',
              itemId: 'director',
              text: '...',
              listeners: {
                click: { 
                  fn: 'onSelectClick',
                  extraArgs: 'director'
                }
              }
            },
            {
              xtype: 'button',
              text: 'X',
              listeners: {
                click: {
                  fn: 'onClearClick',
                  extraArgs: 'director'
                }
              }
            }
          ]
        },
        {
          xtype: 'fieldcontainer',
          anchor: '100%',
          layout: {
            type: 'hbox',
            align: 'stretch'
          },
          bind: {
            fieldLabel: '{i18n.vacation.fields.head_of_hr}'
          },
          items: [
            {
              xtype: 'textfield',
              flex: 1,
              name: 'head_of_hr_name',
              editable: false
            },
            {
              xtype: 'hiddenfield',
              flex: 1,
              fieldLabel: 'Label',
              name: 'head_of_hr'
            },
            {
              xtype: 'button',
              itemId: 'head_of_hr',
              text: '...',
              listeners: {
                click: { 
                  fn: 'onSelectClick',
                  extraArgs: 'head_of_hr'
                }
              }
            },
            {
              xtype: 'button',
              text: 'X',
              listeners: {
                click: {
                  fn: 'onClearClick',
                  extraArgs: 'head_of_hr'
                }
              }
            }
          ]
        },

        // {
        //   xtype: 'label',
        //   padding: '10 0 0 0',
        //   style: {
        //     fontWeight: 'bold'
        //   },
        //   bind: {
        //     text: '{i18n.vacation.fields.assignees}'
        //   }
        // }, {
        //   xtype: 'box',
        //   margin: 0,
        //   autoEl : {
        //       tag : 'hr'
        //   }
        // }, 
        
        // {
        //   xtype: 'panel',
        //   padding: '0 0 10 0',
        //   header: false,
        //   bind: {
        //     title: '{i18n.vacation.fields.assignees}'
        //   }
        // },
        {
          xtype: 'fieldcontainer',
          anchor: '100%',
          hidden: true,
          layout: {
            type: 'hbox',
            align: 'stretch'
          },
          bind: {
            fieldLabel: '{i18n.vacation.fields.assignee}'
          },
          items: [
            {
              xtype: 'textfield',
              flex: 1,
              name: 'assignee_name',
              editable: false
            },
            {
              xtype: 'hiddenfield',
              flex: 1,
              fieldLabel: 'Label',
              name: 'assignee'
            },
            {
              xtype: 'button',
              itemId: 'assignee',
              text: '...',
              listeners: {
                click: { 
                  fn: 'onSelectClick',
                  extraArgs: 'assignee'
                }
              }
            },
            {
              xtype: 'button',
              text: 'X',
              listeners: {
                click: {
                  fn: 'onClearClick',
                  extraArgs: 'assignee'
                }
              }
            }
          ]
        },


        {
          xtype: 'fieldcontainer',
          anchor: '100%',
          layout: {
            type: 'hbox',
            align: 'stretch'
          },
          bind: {
            fieldLabel: '{i18n.document.comment.text}'
          },
          items: [
            {
              xtype: 'textarea',
              flex: 1,
              name: 'note',
              editable: true
            }
          ]
        },

        {
          xtype: 'fieldcontainer',
          height: 32,
          margin: '0 0 10 0',
          fieldLabel: '',
          layout: {
            type: 'hbox',
            align: 'stretch',
            pack: 'end',
            padding: 5
          },
          items: [
            {
              xtype: 'button',
              flex: 1,
              margin: '0 10 0 0',
              bind: {
                text: '{i18n.vacation.ui.save}'
              },
              listeners: {
                click: 'onOKButtonClick'
              }
            },
            {
              xtype: 'button',
              flex: 1,
              bind: {
                text: '{i18n.vacation.ui.cancel}'
              },
              listeners: {
                click: 'onCancelButtonClick'
              }
            },
            {
              xtype: 'button',
              flex: 1,
              margin: '0 0 0 10',
              bind: {
                text: '{i18n.document.base.ui.save_as_template}'
              },
              listeners: {
                click: 'onSaveDefaultsButtonClick'
              }
            }
          ]
        }
      ]
    }
  ],

  initComponent: function () {
    this.callParent();
    this.enableBubble('vacationadded');
    var references = this.getReferences();
    references.own_salary.setBoxLabel(i18n.vacation.fields.own_salary)
    references.sub_salary.setBoxLabel(i18n.vacation.fields.sub_salary)
  }

});