/*
 * File: app/view/hr/vacation/WindowViewController.js
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Tel100.view.hr.vacation.WindowViewController', {
  extend: 'Ext.app.ViewController',
  alias: 'controller.hrvacationwindow',

  chosePerson: function(button, eOpts) {
    var view = this;
    var opts = { viewModel: {
                    data: {
                      hideHR: false,
                      hideParty: true,
                      hideCustomers: true
                    }
                 }
               };

    var dialog = helpers.party.getPartyDialog(function(receivers) {
      if (receivers.length > 0) {
            var person = receivers[0];
            if (person.get('id') !== undefined && person.get('ext_type') == 'hr.Employee'){
              var form = button.up('form').getForm();
              form.findField(eOpts.extraArgs).setValue(person.get('id'));
              form.findField(eOpts.extraArgs+'_name').setValue(person.get('name'));
            }
          }
    }, opts);
    dialog.show();
  },

  clearPerson: function(button, eOpts){
    var form = button.up('form').getForm();
    form.findField(eOpts.extraArgs).setValue(null);
    form.findField(eOpts.extraArgs +'_name').setValue(null);
  },

  onSelectSubstitude: function(button, e, eOpts) {
    this.chosePerson(button, eOpts);
  },

  onOKButtonClick: function(button, e, eOpts) {
    var view = this.getView();
    var form = button.up('form').getForm();
    if(form.isValid()) {
      form.submit({
        success: function(form,action) {
          view.fireEvent('vacationadded', action);
          button.up('window').close();
          //we have to close the window here!!
        },
        failure: function(form,action){
          Ext.MessageBox.alert('Error',action.result.error);
        }});
      } else {
        Ext.Msg.alert('Invalid Data', 'Please correct form errors.');
      }
  },

  onCancelButtonClick: function(button, e, eOpts) {
    button.up('window').close();
  },

  onSelectClick: function(button, e, eOpts){
    this.chosePerson(button, eOpts);
  },

  onClearClick: function(button, e, eOpts){
    this.clearPerson(button, eOpts);
  },

  onSaveDefaultsButtonClick: function(button, e, eOpts){
    var view = this.getView();
    var form = button.up('form').getForm();
    var params = { }
    var list = ['head_of_group', 'head_of_division', 'head_of_department', 'director', 'head_of_hr', 'assignee']
    for (var i = 0; i < list.length; i++) {
      params[list[i]] = form.findField(list[i]).getValue();
    }
    helpers.api.party.setVacationDefaults(params,{
      success: function() {
      }.bind(this),
      failure: function() {
        console.log('failed to save');
      }
    })
   },

  onLoad: function(store, records, successful, eOpts) {
    var view = this.getView();
    var form = view.down('form').getForm();
    for (var i = 0; i < records.length; i++) {
      var data = records[i].data;
      form.findField(data.key).setValue(data.value);
      form.findField(data.key+'_name').setValue(data.person_name);
    }
  },

});
