/*
 * File: app/view/document/motions/OutGridViewModel.js
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Tel100.view.document.motions.OutGridViewModel', {
  extend: 'Ext.app.ViewModel',
  alias: 'viewmodel.documentmotionsoutgrid',

  requires: [
    'Ext.data.Store',
    'Ext.data.proxy.Ajax',
    'Ext.data.reader.Json',
    'Ext.data.field.Field'
  ],

  data: {
    parentId: null
  },

  stores: {
    motions: {
      onStoreChanges: function() {
        var hasDraftMotion = false;
        for(var i = 0; i < this.getCount(); i++) {
          var motion = this.getAt(i);
          if (motion.get('status') === helpers.document.status.DRAFT) {
            hasDraftMotion = true;
            break;
          }
        }
        if (this.viewModel) {
          this.viewModel.set('hasDraftMotion', hasDraftMotion);
        }
      },
      listeners: {
        update: function() {
          this.onStoreChanges();
        },
        remove: function() {
          this.onStoreChanges();
        },
        datachanged: function() {
          this.onStoreChanges();
        }
      },
      autoLoad: true,
      model: 'Tel100.model.document.Motion',
      proxy: {
        type: 'ajax',
        extraParams: {
          mode: 'out',
          document_id: '{document.id}'
        },
        url: '/api/documents/motion',
        reader: {
          type: 'json'
        }
      }
    },
    roles: {
      data: [
        {
          name: 'assignee'
        },
        {
          name: 'signee'
        },
        {
          name: 'author'
        }
      ],
      fields: [
        {
          name: 'name'
        },
        {
          calculate: function(data) {
            return i18n.document.role[data.name];
          },
          name: 'localeField'
        }
      ]
    },
    responseTypes: {
      autoLoad: true,
      model: 'Tel100.model.document.ResponseType',
      proxy: {
        type: 'ajax',
        extraParams: {
          typekey: 1
        },
        url: '/api/documents/response_types',
        reader: {
          type: 'json'
        }
      }
    }
  }

});