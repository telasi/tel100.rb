/*
 * File: app/view/document/folder/PanelViewController.js
 *
 * This file was generated by Sencha Architect version 3.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Tel100.view.document.folder.PanelViewController', {
  extend: 'Ext.app.ViewController',
  alias: 'controller.documentfolderpanel',

  addfolder: function() {
    Ext.MessageBox.prompt('საქაღალდე','შეიყვანეთ სახელი', function(btn, text){
      if(btn == 'ok'){
        Ext.Ajax.request({
          url: '/api/folder',
          method: 'POST',
          params: { name: text},
          success: function(response){
            var folderstore = Ext.getStore('folders');
            folderstore.reload();
            Ext.MessageBox.alert('ok');
          },
          failure: function(response){
            Ext.MessageBox.alert('error');
          }
        });
        close();
      }
    });
  },

  onGridpanelGroupClick: function(view, node, group, e, eOpts) {
    if (e.getTarget().type === 'button'){
      e.stopEvent();
      view.features[0].expand(group);
      switch(e.getTarget().value){
        case '+':
        this.addfolder();
        break;
        case '-':
        view.fireEvent('removefolder', node);
        break;
      }
    }
  },

  onGridpanelAfterRender: function(component, eOpts) {
    component.dropZone = Ext.create('Ext.dd.DropZone', component.el,{
      ddGroup: 'GridExample',

      getTargetFromEvent: function(e) {
        return e.getTarget('.foldercls');
      },

      onNodeEnter : function(target, dd, e, data){
        Ext.fly(target).highlight();
      },

      onNodeOver : function(target, dd, e, data){
        var proto = Ext.dd.DropZone.prototype;
        return proto.dropAllowed;
      },
    });
  },

  onCustomStoreLoad: function(store, records, successful, eOpts) {
    var standardstore = this.getStore('standardfolders');
    var foldersstore = this.getStore('folders');
    foldersstore.loadData(standardstore.getRange(),true);
    foldersstore.loadData(records,true);
  }

});
