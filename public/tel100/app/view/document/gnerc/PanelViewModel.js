/*
 * File: app/view/document/file/PanelViewModel.js
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Tel100.view.document.gnerc.PanelViewModel', {
  extend: 'Ext.app.ViewModel',
  alias: 'viewmodel.documentgnercpanel',

  requires: [
    'Ext.data.Store',
    'Ext.data.proxy.Ajax',
    'Ext.data.reader.Json',
    'Ext.app.bind.Formula'
  ],

  data: {
    type_id: null,
    editable: false,
    showplus: true,
    filename: null,
    mediate: false,
    status: null
  },

  stores: {
    gnerc: {
      listeners: {
        datachanged: function() {
          var store = this;
          store.viewModel.set('filename', store.data.items[0].get('name'));
          store.viewModel.set('showplus', !store.data.items[0].get('name'));
          store.viewModel.set('type_id', store.data.items[0].get('type_id'));
          store.viewModel.set('mediate', store.data.items[0].get('mediate'));
          store.viewModel.set('status', store.data.items[0].get('status'));
        }
      },
      autoLoad: true,
      model: 'Tel100.model.document.Gnerc',
      proxy: {
        type: 'ajax',
        extraParams: {
          document_id: '{document.id}'
        },
        url: '/api/documents/gnerc',
        reader: {
          type: 'json'
        }
      }
    },
    gnerc_subtypes: {
      autoLoad: true,
      model: 'Tel100.model.document.Gnerc_subtypes'
    },
    smshistory: {
      autoLoad: true,
      model: 'Tel100.model.document.Sms',
      proxy: {
        type: 'ajax',
        extraParams: {
          document_id: '{document.id}'
        },
        url: '/api/documents/gnerc/sms',
        reader: {
          type: 'json'
        }
      }
    },
    smses: {
      autoLoad: true,
      model: 'Tel100.model.document.Sms',
      proxy: {
        type: 'ajax',
        extraParams: {
          document_id: '{document.id}'
        },
        url: '/api/documents/gnerc/sms',
        reader: {
          type: 'json'
        }
      }
    }
  },
  formulas: {
    notEditable: function(get) {
      return !get('editable');
    },
    showPlus: function(get){
      return get('editable') && get('showplus');
    },
    showMinus: function(get){
      return get('editable') && !get('showplus');
    },
    isGnercType4: function(get) {
      return ( get('document.type_id') === 13 && !get('document.is_reply') );
    },
    isReply: function(get){
      return get('document.is_reply');
    },
    showSms: function(get){
      return get('editable') && get('document.is_reply');
    },
    smsEditable: function(get){
      debugger;
      return get('editable') || 
             ( ( get('document.as_author') === 1 || get('document.as_signee') === 1 ) && !get('document.is_completed') && !get('document.is_canceled') );
    },
    hideStatus: function(get){
      return get('editable') || !get('document.is_reply');
    },
    comboHidden: function(get){
      return !get('document.type_id') === 13 ;
    },
    dynamicTitle: function(get){
      if(get('document.is_reply')){
        return i18n.document.base.gnerc_reply;
      } else {
        return i18n.document.base.gnerc;
      }
    },
  }

});