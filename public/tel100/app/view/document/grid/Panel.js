/*
 * File: app/view/document/grid/Panel.js
 *
 * This file was generated by Sencha Architect version 3.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Tel100.view.document.grid.Panel', {
  extend: 'Ext.grid.Panel',
  alias: 'widget.documentgridpanel',

  requires: [
    'Tel100.view.document.grid.PanelViewModel',
    'Tel100.view.document.grid.PanelViewController',
    'Ext.grid.View',
    'Ext.grid.column.Column',
    'Ext.panel.Tool'
  ],

  controller: 'documentgridpanel',
  viewModel: {
    type: 'documentgridpanel'
  },
  height: 250,
  width: 400,
  store: 'document.Base',

  bind: {
    title: '<i class="fa fa-file-text-o"></i> {i18n.document.base.grid.title}'
  },
  columns: [
    {
      xtype: 'gridcolumn',
      dataIndex: 'docnumber',
      locked: true,
      bind: {
        text: '{i18n.document.base.docnumber}'
      }
    },
    {
      xtype: 'gridcolumn',
      width: 130,
      dataIndex: 'myStatusName',
      lockable: true,
      locked: true,
      bind: {
        text: '{i18n.document.base.my_status}'
      }
    },
    {
      xtype: 'gridcolumn',
      dataIndex: 'docdate',
      formatter: 'date("d/m/Y")',
      bind: {
        text: '{i18n.document.base.docdate}'
      }
    },
    {
      xtype: 'gridcolumn',
      dataIndex: 'type_id',
      bind: {
        text: '{i18n.document.base.type}'
      }
    },
    {
      xtype: 'gridcolumn',
      dataIndex: 'directionName',
      bind: {
        text: '{i18n.document.base.direction}'
      }
    },
    {
      xtype: 'gridcolumn',
      width: 200,
      dataIndex: 'subject',
      bind: {
        text: '{i18n.document.base.subject}'
      }
    },
    {
      xtype: 'gridcolumn',
      dataIndex: 'page_count',
      text: 'Page_count'
    },
    {
      xtype: 'gridcolumn',
      dataIndex: 'additions_count',
      text: 'Additions_count'
    },
    {
      xtype: 'gridcolumn',
      dataIndex: 'due_date',
      text: 'Due_date'
    },
    {
      xtype: 'gridcolumn',
      dataIndex: 'status',
      text: 'Status'
    },
    {
      xtype: 'gridcolumn',
      dataIndex: 'sender_user_id',
      text: 'Sender_user_id'
    },
    {
      xtype: 'gridcolumn',
      dataIndex: 'sender_id',
      text: 'Sender_id'
    },
    {
      xtype: 'gridcolumn',
      dataIndex: 'sender_type',
      text: 'Sender_type'
    },
    {
      xtype: 'gridcolumn',
      dataIndex: 'owner_user_id',
      text: 'Owner_user_id'
    },
    {
      xtype: 'gridcolumn',
      dataIndex: 'owner_id',
      text: 'Owner_id'
    },
    {
      xtype: 'gridcolumn',
      dataIndex: 'owner_type',
      text: 'Owner_type'
    },
    {
      xtype: 'gridcolumn',
      dataIndex: 'motions_total',
      text: 'Motions_total'
    },
    {
      xtype: 'gridcolumn',
      dataIndex: 'motions_completed',
      text: 'Motions_completed'
    },
    {
      xtype: 'gridcolumn',
      dataIndex: 'motions_canceled',
      text: 'Motions_canceled'
    },
    {
      xtype: 'gridcolumn',
      dataIndex: 'comments_total',
      text: 'Comments_total'
    },
    {
      xtype: 'gridcolumn',
      dataIndex: 'created_at',
      text: 'Created_at'
    },
    {
      xtype: 'gridcolumn',
      dataIndex: 'updated_at',
      text: 'Updated_at'
    }
  ],
  listeners: {
    beforerender: 'onBeforeRender'
  },
  tools: [
    {
      xtype: 'tool',
      type: 'refresh',
      listeners: {
        click: 'onRefresh'
      }
    }
  ]

});