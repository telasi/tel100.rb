/*
 * File: app/view/document/editor/Creator.js
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Tel100.view.document.editor.Creator', {
  extend: 'Ext.container.Container',
  alias: 'widget.documenteditorcreator',

  requires: [
    'Tel100.view.document.editor.CreatorViewModel',
    'Tel100.view.document.editor.CreatorViewController',
    'Tel100.view.document.editor.General',
    'Tel100.view.document.motions.SigneePanel',
    'Tel100.view.document.motions.AssigneePanel',
    'Tel100.view.document.motions.AuthorPanel',
    'Tel100.view.document.file.Panel',
    'Tel100.view.document.motions.OutPanel',
    'Ext.tab.Panel',
    'Ext.tab.Tab',
    'Ext.toolbar.Toolbar',
    'Ext.toolbar.Fill',
    'Ext.form.field.Text',
    'Ext.form.field.HtmlEditor',
    'Ext.form.Panel'
  ],

  controller: 'documenteditorcreator',
  viewModel: {
    type: 'documenteditorcreator'
  },
  border: false,
  layout: 'border',
  defaultListenerScope: true,

  listeners: {
    beforerender: {
      fn: 'onBeforeRender',
      scope: 'controller'
    },
    documentchange: {
      fn: 'onDocumentChange',
      buffer: 500,
      scope: 'controller'
    }
  },
  items: [
    {
      xtype: 'tabpanel',
      region: 'center',
      activeTab: 0,
      deferredRender: false,
      tabPosition: 'bottom',
      items: [
        {
          xtype: 'panel',
          border: false,
          layout: 'border',
          bodyBorder: false,
          bind: {
            title: '{i18n.document.base.ui.newDocumentTab}'
          },
          dockedItems: [
            {
              xtype: 'toolbar',
              region: 'north',
              dock: 'top',
              border: false,
              items: [
                {
                  xtype: 'button',
                  bind: {
                    disabled: '{sendButtonDisabled}',
                    text: '{i18n.document.base.ui.send}'
                  },
                  listeners: {
                    click: {
                      fn: 'onSendClick',
                      scope: 'controller'
                    }
                  }
                },
                {
                  xtype: 'button',
                  bind: {
                    disabled: '{saveButtonDisabled}',
                    text: '{saveButtonText}'
                  },
                  listeners: {
                    click: {
                      fn: 'onSaveClick',
                      scope: 'controller'
                    }
                  }
                },
                {
                  xtype: 'tbfill'
                }
              ]
            }
          ],
          items: [
            {
              xtype: 'container',
              flex: 1,
              region: 'center',
              baseCls: 'white-panel',
              border: false,
              layout: {
                type: 'vbox',
                align: 'stretch'
              },
              items: [
                {
                  xtype: 'textfield',
                  submitEmptyText: false,
                  padding: 5,
                  labelAlign: 'top',
                  emptyText: 'enter document\'s subject',
                  bind: {
                    fieldLabel: '{i18n.document.base.subject}',
                    value: '{document.subject}'
                  }
                },
                {
                  xtype: 'htmleditor',
                  flex: 1,
                  padding: '0 5 5 5',
                  labelAlign: 'top',
                  bind: {
                    fieldLabel: '{i18n.document.base.body}',
                    value: '{document.body}'
                  }
                }
              ]
            },
            {
              xtype: 'container',
              region: 'east',
              split: true,
              border: false,
              width: 400,
              layout: {
                type: 'accordion',
                hideCollapseTool: true
              },
              items: [
                {
                  xtype: 'documenteditorgeneral',
                  bind: {
                    title: '{i18n.document.base.ui.generalTabTitle}'
                  }
                },
                {
                  xtype: 'documentmotionssigneepanel',
                  listeners: {
                    datachanged: 'onSigneesChanged'
                  }
                },
                {
                  xtype: 'documentmotionsassigneepanel',
                  listeners: {
                    datachanged: 'onAssigneeChange'
                  }
                },
                {
                  xtype: 'documentmotionsauthorpanel',
                  listeners: {
                    datachanged: 'onAuthorsChanged'
                  }
                },
                {
                  xtype: 'documentfilepanel'
                }
              ]
            }
          ]
        },
        {
          xtype: 'panel',
          border: false,
          layout: 'fit',
          bind: {
            title: '{i18n.document.base.ui.motionsTabTitle}'
          },
          items: [
            {
              xtype: 'documentmotionsoutpanel',
              border: false,
              bodyBorder: false,
              listeners: {
                draftmotionchanged: 'onDraftmotionChanged',
                datachanged: 'onReceiversChanged'
              }
            }
          ]
        }
      ]
    }
  ],

  onSigneesChanged: function(panel, operation, item) {
    this.down('documentmotionsoutpanel').refresh();
  },

  onAssigneeChange: function(panel, operation, item) {
    this.down('documentmotionsoutpanel').refresh();
  },

  onAuthorsChanged: function(panel, operation, item) {
    this.down('documentmotionsoutpanel').refresh();
  },

  onDraftmotionChanged: function(hasDraftMotion) {
    var vm = this.getViewModel();
    vm.set('hasDraftMotion', hasDraftMotion);
  },

  onReceiversChanged: function(panel, operation, item) {
    console.log('changed!');
  }

});