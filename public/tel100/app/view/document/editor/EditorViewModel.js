/*
 * File: app/view/document/editor/EditorViewModel.js
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Tel100.view.document.editor.EditorViewModel', {
  extend: 'Ext.app.ViewModel',
  alias: 'viewmodel.documenteditoreditor',

  requires: [
    'Ext.app.bind.Formula'
  ],

  data: {
    document: null
  },

  formulas: {
    hideSignButton: function(get) {
      return get('document.as_signee') !== 1;
    },
    hideAuthorButton: function(get) {
      return get('document.as_author') !== 1;
    },
    authors: function(get) {
      var authors = get('document.authors');
      var text = [];
      if (authors.length) {
        for(var i = 0; i < authors.length; i++) {
          var author = authors[i];
          var decor = helpers.document.status.statusDecoration(author.status);
          text.push([
          '<span class="' + decor.style + '">',
          '<i class="fa ' + decor.icon + '"></i> ',
          author.name,
          ( author.response ? ' &mdash; ' + author.response : '' ),
          '</span>'
          ].join(''));
        }
        return text.join('; ');
      } else {
        var status = get('document.status');
        var decor = helpers.document.status.statusDecoration(status);
        return [
        '<strong class="text-success">' + i18n.document.base.sender + '</strong> &mdash; ',
        '<span class="' + decor.style + '">',
        '<i class="fa ' + decor.icon + '"></i> ',
        get('document.sender_name'),
        '</span>'
        ].join('');
      }
    },
    hideSignees: function(get) {
      var signees = get('document.signees');
      return !signees || signees.length === 0;
    },
    signees: function(get) {
      var signees = get('document.signees');
      var text = [];
      for(var i = 0; i < signees.length; i++) {
        var signee = signees[i];
        var decor = helpers.document.status.statusDecoration(signee.status);
        text.push([
        '<span class="' + decor.style + '">',
        '<i class="fa ' + decor.icon + '"></i> ',
        signee.name,
        ( signee.response ? ' &mdash; ' + signee.response : '' ),
        '</span>'
        ].join(''));
      }
      return text.join('; ');
    },
    docinfo: function(get) {
      var docnumber = get('document.docnumber');
      var typeName = get('document.type.name');
      var status = get('document.status');
      var decor = helpers.document.status.statusDecoration(status);
      var senderName = get('document.sender_name');
      var sentAt = get('document.sent_at_f');
      return [
      '<span class="' + decor.style + '">',
      '<i class="fa ' + decor.icon + '"></i> ',
      '<strong>' + docnumber + '</strong>',
      '</span> ',
      '<span class="text-muted">' + typeName + '</span> &mdash; ',
      '<strong>' + senderName + '</strong>, ',
      '<span class="text-danger">' + sentAt + '</span>'
      ].join('');
    },
    incoming: function(get) {
      var incoming = get('document.incoming');
      var text = [];
      for (var i = 0; i < incoming.length; i++) {
        var from = incoming[i];
        var status = from.status;
        var decor = helpers.document.status.statusDecoration(status);
        var senderName = from.name;
        var sendType = from.send_type;
        text.push([
        '<span class="' + decor.style + '">',
        '<i class="fa ' + decor.icon + '"></i> ',
        senderName,
        ( sendType && sendType !== '--' ? ' &mdash; ' + sendType : ''  ),
        '</span>'
        ].join(''));
      }
      return text.join('; ');
    },
    hideIncoming: function(get) {
      return !get('document.incoming').length;
    }
  }

});